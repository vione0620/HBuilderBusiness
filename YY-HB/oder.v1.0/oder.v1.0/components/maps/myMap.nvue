<template>
    <view class="content">
        <map class="map" id="map1" ref="map1" :controls="controls" :scale="scale" 
		:longitude="location.longitude" :latitude="location.latitude"
		show-location="true" show-compass="true" enable-overlooking="true" enable-zoom="true" enable-scroll="true"
		enable-rotate="true" enable-satellite="true" enable-traffic="true" show-scale="true"
		:markers="markers"
		@controltap="goback()"></map>   
    </view>
</template> 
<script> 
	module.exports = {
		props:{
			orderMapData:[Object,String],
		},
        data() {
            return {
                location: {
                    longitude: this.orderMapData.shoplongitude,
                    latitude: this.orderMapData.shoplatitude,
                },
                controls: [{
                    id: 1,
                    position: {
                        left: 15,
                        top: 30,
                        width: 35,
                        height: 35
                    },
                    iconPath: '/static/icon-goback.png',
                    clickable: true
                }],
				 
                scale: 0, 
                markers: [{
						id:0,
						title:'配送',
						latitude: this.orderMapData.latitude,
						longitude:this.orderMapData.longitude, 
						iconPath: '/static/icon-car.png',   					
						callout:{  
						　　content:'配送中',
						　　color:'#ffffff',
						　　fontSize:14,
						　　borderRadius:0,
						　　bgColor:'#00c16f',
						　　display:'ALWAYS',
						},
					},
					{
						id:0,
						title:'商铺',
						latitude: this.orderMapData.shoplatitude,
						longitude: this.orderMapData.shoplongitude,
						iconPath: '/static/icon-shop.png',   				
						callout:{ 
						　　content:this.orderMapData.shopName,
						　　color:'#ffffff',
						　　fontSize:14,
						　　borderRadius:0,
						　　bgColor:'#00c16f',
						　　display:'ALWAYS',
						},
					}, 
					],  
    
            }
        }, 
        mounted() { 
			
			this.calculateRange()  
        }, 
        methods: { 
			setZoom(){
				
				let map = new plus.maps.Map("map1")
				map.showUserLocation(true)
				map.showZoomControls(true)
				map.isTraffic(true)
				map.getZoom()
				 
				
				map.Bubble(true)  
				 
			},
            goback(){
				uni.navigateBack({
					delta:1,
					animationDuration:200,
					animationType:'pop-out'
				}) 
			},
			calculateRange(){   
				var point1 = new plus.maps.Point(this.orderMapData.longitude,this.orderMapData.latitude); 
				var point2 = new plus.maps.Point(this.orderMapData.shoplongitude,this.orderMapData.shoplatitude); 
				
				plus.maps.Map.calculateDistance(
				point1,
				point2,
				(event)=>{
					var distance = event.distance;  // 转换后的距离值   
					console.log(distance,'distancedistancedistance')
					this.myMapSetZoom(Math.ceil(distance))
				},(err)=>{ 
					console.log("err:"+JSON.stringify(err))
				})
			},
			myMapSetZoom(range){  				
				if(range >= 0 && range < 500){
					this.scale = 18
				}else if(range >= 500 && range < 2000){
					this.scale = 18
				}else if( range >= 2000 && range <= 4000){
					this.scale = 15
				}else if(range >= 4000 && range <= 8000){
					this.scale = 12
				}else if(range >= 8000 && range <= 10000){
					this.scale = 9
				}else if(range >= 10000 && range <= 15000){
					this.scale = 6
				}else if(range >= 15000 && range <= 35000){
					this.scale = 3
				}else if(range >= 35000){
					this.scale = 3
				}   
			},
        }
    }
</script>

<style>
    .content {
        flex: 1;
    }
    .map {
        width: 750rpx;
		/* #ifdef H5 */
		width: 100%;
		/* #endif */
        height: 450px;
        background-color: #f0f0f0;
    }
    .scrollview {
		/* #ifdef H5 */
		margin-top: 240px;
		/* #endif */
        flex: 1;
        padding: 10px;
    }
    .list-item {
        flex-direction: row;
        flex-wrap: nowrap;
        align-items: center;
        padding: 5px 0px;
    }
    .list-text {
        flex: 1;
    }
    .button {
        margin-top: 5px;
        margin-bottom: 5px;
    }
</style>